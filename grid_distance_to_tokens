// Calculate Range using grid squares instead of Euclidean distance
// ⭐ Configuration ⭐
const RANGE_SQUARES = 2; // 2 grid squares = 4 meters if each square is 2m

// --- Get origin token ---
const originToken = canvas.tokens.controlled[0];
if (!originToken) {
  ui.notifications.warn("Please select a token to center the AoE.");
  return;
}

// --- Compute square-based distance (Chebyshev) ---
function getGridDistance(a, b) {
  const dx = Math.abs(a.x - b.x) / canvas.grid.size;
  const dy = Math.abs(a.y - b.y) / canvas.grid.size;
  return Math.max(dx, dy); // Treat diagonals as 1 unit like tactical grid movement
}

// --- Find tokens in range ---
const tokensInRange = canvas.tokens.placeables.filter(token => {
  if (!token.actor || token === originToken) return false;
  const dist = getGridDistance(originToken.center, token.center);
  console.log(`${token.name}: ${dist} grid squares`);
  return dist <= RANGE_SQUARES;
});

// --- Notify user ---
ui.notifications.info(`Found ${tokensInRange.length} token(s) within ${RANGE_SQUARES * canvas.scene.grid.distance} meters. Open console to see results.`);
